*simulation example 
*prepared by Donghui Wang on 05/30/2023


****************************************
*data generation process
******************************************
cd "\\NAS\home\Drive\US_project\cleaned_data"

import delimited 2020-05-28-simulation-random.csv,clear // random trend generated by coauthor 

g t= year +1

*set cutpoints 
mat tau1=(-1.577 , 0.02 , 1.604)
mat tau2=(-2.206,-0.824, 0.867, 1.414)
mat tau3=(-1.4, -0.05, 1.5)

drop bininsurvey1 bininsurvey2 binninginsurvey1 binninginsurvey2

*survey 1 ï¼šoverlapping two years 5 and 6, random sample 20%

forval i=1/5 {
preserve 
sample 20 if t==`i'
drop if t != `i'
tempfile s`i'
save `s`i'.dta', replace 
restore 
}

use `s5.dta', clear 
append using `s1.dta'
append using `s2.dta'
append using `s3.dta'
append using `s4.dta'

drop k2 
rename k1 k 
g survey=1 
save survey1.dta, replace 


*survey2 : 5- 10 , random sample 15%
import delimited 2020-05-28-simulation-random.csv, clear 

g t= year +1
drop bininsurvey1 bininsurvey2 binninginsurvey1 binninginsurvey2

rename k1observedresponseinsurvey1 k1
rename k2observedresponseinsurvey2 k2

forval i=4/8 {
preserve 
sample 15 if t==`i'
drop if t != `i'
tempfile s`i'
save `s`i'.dta', replace 
restore 
}

use `s4.dta', clear 
append using `s5.dta'
append using `s6.dta'
append using `s7.dta'
append using `s8.dta'


drop k1 
rename k2 k 

g survey=2 
append using survey1.dta 
save survey2, replace 

*survey 3: 7-10, sample 15
import delimited 2020-05-28-simulation-random.csv,clear 
g t = year +1 

drop bininsurvey1 bininsurvey2 binninginsurvey1 binninginsurvey2 k1observedresponseinsurvey1 k2observedresponseinsurvey2
rename yindividualattitude y 
rename muyearattitude mu

gen k3=.
 replace k3 = 1 if y<=-1.4
 replace k3 = 2 if y>-1.4 & y<=-0.05
 replace k3 = 3 if y>-0.05 & y<=1.5
 replace k3 = 4 if y>1.5

forval i=7/10{
preserve 
sample 15 if t==`i'
drop if t != `i'
tempfile s`i'
save `s`i'.dta', replace 
restore 
}
 
use `s7.dta', clear
append using `s8.dta'
append using `s9.dta'
append using `s10.dta'
  rename k3 k 
g survey =3 
append using survey2.dta

keep k t mu survey 

save sim_jm, replace 
erase survey1.dta 
erase survey2.dta 



  
*****************Graphing****************
*Figure 3(A)  
import delimited 2020-05-28-simulation-random.csv,clear 
g t= year +1
rename k1observedresponseinsurvey1 k1
rename k2observedresponseinsurvey2 k2
rename yindividualattitude y 
rename muyearattitude mu

	sort t 
	twoway (line mu  t, lcolor(red)) (scatter  y t , mlcolor(grey%10) msymbol(Oh) msize(small)), xlab(1(1)10) xtitle(T) ///
	legend(order (1 "mu{sub:t}"  2 "y*{sub:it} ")) title("(A) Simulated Latent Attitude Distribution", size(small))
 graph save sim_latent.gph, replace 


*Figure 3(B)
 use sim_jm, clear 
 
  *calculate cdf
  tab k, gen(k_)
  collapse k_*, by(t survey)
  
  g k1=k_1*100
  g k2=(k_1 + k_2)*100
  g k3=(k_1 + k_2+k_3)*100
  g k4=(k_1 + k_2+k_3+k_4)*100
  g k5=(k_1 + k_2+k_3+k_4+k_5)*100
 
  local s1 "black"
  local s2 "black"
  local s1p "solid"
  local s2p "longdash_dot"
  local s3p "dash" 
 
  #delimit;
  twoway (line k1 t if survey==1 , lp(`s1p') lcolor(`s1'*.5)  text(6 0.5 "y{sub:A}=1" ,size(small) ))
		 (line k2 t if survey==1 , lp(`s1p') lcolor(`s1'*.5)  text(51 0.5 "y{sub:A}=2" ,size(small) ))
		 (line k3 t if survey==1 , lp(`s1p') lcolor(`s1'*.5)  text(94 0.5 "y{sub:A}=3" ,size(small) ))
		 (line k4 t if survey==1 , lp(`s1p') lcolor(`s1'*.5)  text(100  0.5   "y{sub:A}=4" ,size(small) ))
		 (line k1 t if survey==2 , lp(`s2p') lcolor(black)  text(1.9 3.75 "y{sub:B}=1" ,size(small)))
		 (line k2 t if survey==2 , lp(`s2p')   lcolor(black) text(28 3.75 "y{sub:B}=2"  ,size(small)))
		 (line k3 t if survey==2 , lp(`s2p')   lcolor(black) text(86 3.75 "y{sub:B}=3"  ,size(small)))
		 (line k4 t if survey==2 , lp(`s2p')   lcolor(black) text(94 3.75 "y{sub:B}=4" ,size(small) ))
		 (line k5 t if survey==2,  lp(solid)   lcolor(black) text(100   3.75 "y{sub:B}=5" , size(small)  ))
		 (line k1 t if survey==3 , lp(solid) lcolor(black)text(12 10.5 "y{sub:C}=1" , color(`s1'*.75) size(small)))
		 (line k2 t if survey==3 , lp(solid) lcolor(black)text(57 10.5 "y{sub:C}=2" , color(`s1'*.75) size(small) ))
		 (line k3 t if survey==3 , lp(solid) lcolor(black)text(96 10.5 "y{sub:C}=3" , color(`s1'*.75) size(small) ))
		 (line k4 t if survey==3 , lp(solid) lcolor(black)text(100 10.5 "y{sub:C}=4" , color(`s1'*.75) size(small) ))
		 ,  xlab(0(1)11) legend(off) xtitle(T) title("(B)Cumulative Distribution of Ordinal Scales from Three Surveys",size(small))
  ;
  #delimit cr  
  graph save sim_surveyc.gph, replace 
  

*Figure 3 (c) interval- scale approach 
use sim_jm, clear 
collapse (mean) k, by(t survey)

sort t 
#delimit;
twoway (line k t if survey==1  ,text(2.5 2 " A") lp(line) lcolor(black)) 
       (line k t if survey==2 , text(3 5 " B") lp(dash) lcolor(black))
	   (line k t if survey==3 , text(2.5 8 " C") lp(dot) lcolor(black)), 
	    ytitle(Mean value) xtitle(T) legend(off) xlab(1(1)10) title("(C)Interval-scale Approach" , size(small))
;
delimit cr 
graph save sim_meanvalue, replace 


*Figure 3(d) proportional approach 
 use sim_jm, clear 
 gen k1=(inrange(k,1,2))
 
 tab k1, gen(dich)
 collapse dich*, by(t survey)
 gen approv=dich1*100

sort t 

#delimit;
twoway (line approv t if survey==1 , text(40 3 " A") lp(line) lcolor(black) ) 
       (line approv t if survey==2 , text(70 6 " B") lp(dash) lcolor(black))
	   (line approv t if survey==3 , text(60 8 " C") lp(dot) lcolor(black)), 
	   ytitle(Percentage of approval) xtitle(T) legend(off) xlab(1(1)10)  title("(D)Proportional Approach" ,size(small))
;
#delimit cr  
graph save sim_prop, replace 


*combine four 
graph combine  sim_latent.gph sim_surveyc.gph sim_meanvalue.gph  sim_prop.gph
graph save "Graph" "C:\Users\Donghui\SynologyDrive\US_project\image\fig3.gph", replace

graph use "C:\Users\Donghui\SynologyDrive\US_project\image\fig3.gph"
graph export "fig3.jpg" , replace width(8000) height(6000)   
  


*==================

*estimation 
*anchort first year to zero
 import delimited 2020-05-28-simulation-random.csv, clear 
keep year muyearattitude

duplicates drop 
sort year
g mu0=mu-mu[1]
mkmat  mu0


*initial values to feed ml 
use sim_jm.dta, clear
rename t s 

 *initial values 
  qui: oprobit k i.s
  mat c=r(table)
  mat s=c[1, "k:"]

  levelsof survey, local(survey)
  foreach x of local survey { 
  qui: oprobit k i.s if survey==`x' 
  qui: mat c=r(table)
  qui: mat tau`x'=c[1, " /:"]
  	
  }
  	//rename tau
	forval i= 1/3{
	
    mat colname tau`i'=_cons
	local n= `= colsof(tau`i')'
	local ctau`i' ""
	forval j=1/`n'{	
	local ctau`i' "`ctau`i'' tau`i'_`j'"  
	
	}
	mat coleq tau`i'= `ctau`i''
	}	
  *put together intial values 
  mat e0=s,tau1, tau2,tau3
   
   
*ml 

  capture program drop obit 
  
  program define obit 

  args 	 lnf mu tau1_1 tau1_2 tau1_3  tau2_1 tau2_2  tau2_3 tau2_4 tau3_1 tau3_2 tau3_3  // cut off point 

  quietly {
  
	// survey 1 
    replace `lnf' =ln(normal(`tau1_1' -`mu'))                             if $ML_y1 ==1 & survey==1
	replace `lnf' =ln(normal(`tau1_2'  -`mu')  - normal(`tau1_1' -`mu' )) if $ML_y1 ==2 & survey==1
    replace `lnf' =ln(normal(`tau1_3'  -`mu')  - normal(`tau1_2' -`mu'))  if $ML_y1 ==3 & survey==1
    replace `lnf' =ln(1 - normal(`tau1_3'  -`mu' ))                       if $ML_y1 ==4 & survey==1
	
	// survey 2
	replace `lnf' =ln(normal( `tau2_1' -`mu'))                            if $ML_y1 ==1 & survey==2
	replace `lnf' =ln(normal(`tau2_2' -`mu')  - normal( `tau2_1' -`mu'))  if $ML_y1 ==2 & survey==2
    replace `lnf' =ln(normal(`tau2_3' -`mu')  - normal( `tau2_2' -`mu'))  if $ML_y1 ==3 & survey==2
	replace `lnf' =ln(normal(`tau2_4' -`mu')  - normal( `tau2_3' -`mu'))  if $ML_y1 ==4 & survey==2
    replace `lnf' =ln(1 - normal(`tau2_4'  -`mu'))                        if $ML_y1 ==5 & survey==2
	
	//survey 3 
    replace `lnf' =ln(normal(`tau3_1' -`mu'))                             if $ML_y1 ==1 & survey==3
	replace `lnf' =ln(normal(`tau3_2'  -`mu')  - normal(`tau3_1' -`mu' )) if $ML_y1 ==2 & survey==3
    replace `lnf' =ln(normal(`tau3_3'  -`mu')  - normal(`tau3_2' -`mu'))  if $ML_y1 ==3 & survey==3
    replace `lnf' =ln(1 - normal(`tau3_3'  -`mu' ))                       if $ML_y1 ==4 & survey==3
	
	
  }
 end 

   
capture program drop obit_e
    program def obit_e, eclass 
	
    
    ml model lf obit (k: k= i.s, noconstant)  ///
					 (tau1_1: )  (tau1_2: )  (tau1_3: )            ///
	                 (tau2_1: )  (tau2_2: ) (tau2_3: )  (tau2_4 : )  	///
					 (tau3_1: )  (tau3_2: )  (tau3_3: ) 
   ml init e0  // intial values obtained from ordered probit rountine 
   ml maximize , difficult
   end 
   
   // bootstrap confidence interval 
   obit_e
   matrix b = e(b)
   
   bootstrap _b, reps(500) seed(1234) : obit_e 
   
   mat c=r(table)
   
   mat e_mu = c[1, "k:"]'
   mat e_ci=c[5..6,"k:"]'
   
   
   mat e_tau1=c[1, "tau1_1:" .. "tau1_3:"]'
   mat e_tau2=c[1, "tau2_1:" .. "tau2_4:"]'
   mat e_tau3=c[1, "tau3_1:" .. "tau3_3:"]'
   
   mat com_mu=mu0, e_mu
   
   *compare actural Vs estimated cut-off
   mat com_tau1=tau1',e_tau1
   mat com_tau2=tau2',e_tau2
   mat com_tau3=tau3',e_tau3
   
   mat list com_tau1 , format (%9.3f) 
   mat list com_tau2 , format (%9.3f) 
   mat list com_tau3 , format (%9.3f) 
   

   
*Figure 4. estimated results   
   svmat com_mu
   rename com_mu1 Actural
   rename com_mu2 Estimate
	  
   gen t= _n if !missing(Actural)
   
   svmat e_ci
   rename e_ci1 ll
   rename e_ci2 ul
   
  
   sort  t
   twoway (line Actural t  if !missing(Actural),lp(dash)) ///
          (line Estimate t if !missing(Estimate),lp(line) lcolor(black))  ///
		  (rscatter  ul ll t, recast(rarea) color(grey%30)) ///
		   , legend( ring(0)) xlab (1(1)10) ylab(-1(0.2)1) xtitle(T) ///
		   legend(ring(0)  order ( 1 "Actual" 2 "Estimates" 3 "95% Confidence Interval"))
graph save "Graph" "C:\Users\Donghui\SynologyDrive\US_project\cleaned_data\sim_result.gph"

graph use "C:\Users\Donghui\SynologyDrive\US_project\cleaned_data\sim_result.gph"

graph export "fig4.jpg",  replace width(8000) height(6000)  
  
